@model yillikizin.Models.personel
@{
    ViewBag.Title = "PersonelEkle";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<div class="card">
    <div class="header">
        <h2>PERSONEL EKLE</h2>
    </div>
    <div class="body">
        <form id="createForm" method="post" action="@Url.Action("PersonelEkle", "Home")" enctype="multipart/form-data" class="create-form">
            @Html.AntiForgeryToken()

            <div class="form-row">
                <label>Fotoğraf</label>
                <div class="photo-preview">
                    <img id="mevcutFoto" src="~/images/default.png" style="max-width: 100%" />
                </div>
                <input type="file" name="File" id="resimDosya" accept="image/*" />
            </div>

            <div class="form-row">
                <div style="display: flex; gap: 10px;">
                    <div style="flex: 1;">
                        <label>Kullanıcı Adı</label>
                        @Html.TextBoxFor(model => model.kullaniciadi, new { @required = "required", maxlength = "50" })
                        @Html.ValidationMessageFor(model => model.kullaniciadi, "", new { @class = "text-danger" })
                    </div>
                    <div style="flex: 1;">
                        <label>Şifre</label>
                        @Html.PasswordFor(model => model.sifre, new { @required = "required", maxlength = "50" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div style="display: flex; gap: 10px;">
                    <div style="flex: 1;">
                        <label>Ad</label>
                        @Html.TextBoxFor(model => model.adi, new { @required = "required", maxlength = "50" })
                    </div>
                    <div style="flex: 1;">
                        <label>Soyad</label>
                        @Html.TextBoxFor(model => model.soyadi, new { @required = "required", maxlength = "50" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div style="display: flex; gap: 10px;">
                    <div style="flex: 1;">
                        <label>Kart Numarası</label>
                        @Html.TextBoxFor(model => model.kartno, new { @required = "required", maxlength = "50" })
                        @Html.ValidationMessageFor(model => model.kartno, "", new { @class = "text-danger" })
                    </div>
                    <div style="flex: 1;">
                        <label>Sicil Numarası</label>
                        @Html.TextBoxFor(model => model.sicilno, new { @required = "required", maxlength = "50" })
                        @Html.ValidationMessageFor(model => model.sicilno, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div style="display: flex; gap: 10px;">
                    <div style="flex: 1;">
                        <label>İşe Giriş Tarihi</label>
                        @Html.TextBoxFor(model => model.isegiristarih, new { @class = "form-control", @type = "date", @required = "required" })
                    </div>
                    <div style="flex: 1;">
                        <label>Doğum Tarihi</label>
                        @Html.TextBoxFor(model => model.dogumtarih, new { @class = "form-control", @type = "date" })
                    </div>

                </div>
            </div>
            <div class="form-row">
                <div style="display: flex; gap: 10px;">
                    <div style="flex: 1;">
                        <label for="VardiyaId">Vardiya Seçimi</label>
                        <div class="vardiya-container" style="display: flex; flex-wrap: wrap;">
                            @foreach (var vardiya in (IEnumerable<SelectListItem>)ViewBag.VardiyaList)
                            {
                                <div style="margin-right: 15px;">
                                    <input type="radio" id="vardiya_@vardiya.Value" name="vardiyaId" value="@vardiya.Value" required />
                                    <label for="vardiya_@vardiya.Value">@vardiya.Text</label>
                                </div>
                            }
                            @Html.ValidationMessage("vardiyaId", "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div style="flex: 1;">
                        <label>Ünvan</label>
                        @Html.TextBoxFor(model => model.unvan, new { @required = "required", maxlength = "150" })
                    </div>
                </div>
            </div>
            <label>Departman</label>
            <div class="departman-container" style="display: flex; flex-wrap: wrap;">
                @foreach (var departman in (IEnumerable<SelectListItem>)ViewBag.DepartmanList)
                {
                    <div style="margin-right: 15px;">
                        <input type="radio" id="departman_@departman.Value" name="departmanId" value="@departman.Value" required />
                        <label for="departman_@departman.Value">@departman.Text</label>
                    </div>
                }
                @Html.ValidationMessage("departmanId", "", new { @class = "text-danger" })
            </div>
            <div class="form-row">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#iletisimModal">
                    İletişim Bilgilerini Gir
                </button>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#izinModal">
                    İzin Bilgilerini Gir
                </button>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#kimlikModal">
                    Kişisel Bilgilerini Gir
                </button>
            </div>
            <div class="modal fade" id="izinModal" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Kimlik Bilgileri</h5>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label>Hak Ettiği İzin</label>
                                @Html.TextBoxFor(model => model.hakettigi, new { @class = "form-control", maxlength = "3" })
                            </div>
                            <div class="form-group">
                                <label>Kullandığı İzin</label>
                                @Html.TextBoxFor(model => model.kullandigi, new { @class = "form-control", maxlength = "3" })
                            </div>
                            <div class="form-group">
                                <label>Kalan İzin</label>
                                @Html.TextBoxFor(model => model.kalan, new { @class = "form-control", maxlength = "3" })
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="kimlikModal" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Kimlik Bilgileri</h5>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label>Kan Grubu</label>
                                @Html.TextBoxFor(model => model.kan, new { @class = "form-control", maxlength = "50", placeholder = "A+" })
                            </div>
                            <div class="form-group">
                                <label>Beden</label>
                                @Html.TextBoxFor(model => model.beden, new { @class = "form-control", placeholder = "M" })
                            </div>
                            <div class="form-group">
                                <label>Ayakkabı Numarası</label>
                                @Html.TextBoxFor(model => model.ayakkabino, new { @class = "form-control", placeholder = "36" })
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="iletisimModal" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">İletişim Bilgileri</h5>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label>Telefon</label>
                                @Html.TextBoxFor(model => model.gsm, new { @class = "form-control", type = "tel", maxlength = "10", placeholder = "+90 999 999 99 99" })
                            </div>
                            <div class="form-group">
                                <label>Adres</label>
                                @Html.TextAreaFor(model => model.adres, new { @class = "form-control", rows = "3", placeholder = "İstanbul/TÜRKİYE" })
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <label>Kullanıcı Grubu</label>
                <div class="radio-group">
                    @foreach (var grup in (IEnumerable<SelectListItem>)ViewBag.KullaniciGrupList)
                    {
                        <div class="radio-item">
                            <input type="radio" id="kullaniciGrup_@grup.Value" name="kullaniciGrupId" value="@grup.Value" required />
                            <label for="kullaniciGrup_@grup.Value">@grup.Text</label>
                        </div>
                    }
                </div>
            </div>

            <button type="submit" class="save-button">Personel Ekle</button>
        </form>
    </div>
</div>

<style>
    .create-form {
        padding: 20px;
    }

    .form-row {
        margin-bottom: 20px;
    }

        .form-row label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .form-row input[type="text"],
        .form-row input[type="password"],
        .form-row input[type="date"],
        .form-row input[type="tel"],
        .form-row textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

    .radio-group {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
    }

    .radio-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .photo-preview {
        margin-bottom: 10px;
        max-width: 200px;
    }

    .save-button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
    }

        .save-button:hover {
            background-color: #45a049;
        }

    .text-danger {
        color: red;
        font-size: 12px;
        margin-top: 5px;
    }
</style>

<script>
    document.getElementById('resimDosya').addEventListener('change', function (e) {
        if (e.target.files && e.target.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('mevcutFoto').src = e.target.result;
            }
            reader.readAsDataURL(e.target.files[0]);
        }
    });

    // İzin hesaplama
    document.getElementById('hakettigi').addEventListener('input', calculateKalanIzin);
    document.getElementById('kullandigi').addEventListener('input', calculateKalanIzin);

    function calculateKalanIzin() {
        var hakettigi = parseInt(document.getElementById('hakettigi').value) || 0;
        var kullandigi = parseInt(document.getElementById('kullandigi').value) || 0;
        var kalan = hakettigi - kullandigi;
        document.getElementById('kalan').value = kalan;
    }
</script>
<script>
    $(document).ready(function () {
        $("#personelEkleForm").submit(function (event) {
            event.preventDefault(); // Formun normal gönderimini durdur
            var formData = new FormData(this);

            $.ajax({
                url: '@Url.Action("PersonelEkle", "Home")',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    // Başarılıysa yönlendirme
                    window.location.href = '@Url.Action("Index", "Home")';
                },
                error: function (xhr) {
                    // Hata durumunda kullanıcı adını kontrol et
                    if (xhr.status === 400) { // Hata durumu
                        $("#kullaniciadi").addClass("error"); // Kırmızı arka plan için stil ekleyin
                        $("#kullaniciadiError").show(); // Hata mesajını göster
                    }
                }
            });
        });
    });
</script>
<style>
    .error {
        border: 1px solid red; /* Hata durumunda kırmızı kenarlık */
    }

    button,
    .button {
        position: relative;
        background-color: dodgerblue;
        color: white;
        border-radius: 0.2em;
        border: none;
        box-shadow: 0 0.125em 0.125em rgba(0, 0, 0, 0.3);
        box-sizing: border-box;
        display: inline-block;
        cursor: pointer;
        user-select: none;
        -webkit-user-select: none;
        font-family: inherit;
        font-size: inherit;
        line-height: normal;
        font-weight: bold;
        text-align: center;
        outline: none;
        padding: 0.6em;
        margin: 0.2em;
        transition: all 0.1s;
        min-width: 10em;
    }

        button:focus:not(:disabled),
        .button:focus:not(:disabled) {
            opacity: 0.8;
        }

        button:hover:not(:disabled),
        .button:hover:not(:disabled) {
            opacity: 0.8;
            top: -0.1em;
            box-shadow: 0 0.2em 0.1em rgba(0, 0, 0, 0.2);
        }

        button:hover:active,
        .button:hover:active {
            top: 0.1em;
            box-shadow: 0 0.02em 0.125em rgba(0, 0, 0, 0.4);
            transition: all 0.05s;
        }

        button:disabled,
        .button:disabled {
            cursor: initial;
            background-color: silver;
        }

    a.button {
        text-decoration: none;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f4f6f9;
        color: #333;
        margin: 0;
        padding: 0;
    }


    .modern-box {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s, box-shadow 0.2s;
        cursor: pointer;
        height: 150px; /* Fixed height for consistency */
        margin-bottom: 10px;
    }

        .modern-box:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }

    .modern-box-content {
        text-align: left;
        flex-grow: 1;
        padding-right: 20px;
    }

        .modern-box-content h3 {
            margin: 0;
            font-size: 1.2em;
            color: #007bff;
        }

        .modern-box-content p {
            margin: 10px 0 0;
            font-size: 2em;
            color: #333;
        }

    .modern-box-image img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 50%;
    }

    h1, h2 {
        color: #007bff;
    }

    table {
        background: white;
        border-radius: 8px;
        overflow: hidden;
        margin-top: 20px;
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 12px;
        border: 1px solid #ddd;
    }

    th {
        background: #007bff;
        color: white;
    }

    td {
        vertical-align: middle;
    }
</style>

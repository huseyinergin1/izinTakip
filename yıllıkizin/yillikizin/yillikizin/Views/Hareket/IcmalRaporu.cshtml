@model yillikizin.Models.HareketViewModel
@{
    ViewBag.Title = "İcmal Raporu";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>İcmal Raporu</h2>

<div class="container-fluid" style="max-width: 1000px; margin: 0 auto;">
    <div class="row">
        <div class="col-md-12">

            <!-- Personel Tablosu -->
            <div style="max-height: 400px; overflow-y: scroll;">
                <table class="table-hover table-striped table-bordered table shadow-sm" id="personelListesi">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col" class="sortable" data-sort="string">Adı</th>
                            <th scope="col" class="sortable" data-sort="string">Soyadı</th>
                            <th scope="col" class="sortable" data-sort="string">Kart Numarası</th>
                            <th scope="col" class="sortable" data-sort="string">Sicil Numarası</th>
                            <th scope="col" class="sortable" data-sort="string">Departman</th>
                        </tr>
                        <tr>
                            <th><input type="text" class="form-control arama" placeholder="Adı ara..." /></th>
                            <th><input type="text" class="form-control arama" placeholder="Soyadı ara..." /></th>
                            <th><input type="text" class="form-control arama" placeholder="Kart Numarası ara..." /></th>
                            <th><input type="text" class="form-control arama" placeholder="Sicil Numarası ara..." /></th>
                            <th><input type="text" class="form-control arama" placeholder="Departman ara..." /></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var personel in Model.PersonelListesi)
                        {
                            <tr class="personel-row @(Model.SelectedPersonelId == personel.id ? "table-active" : "")"
                                data-personel-id="@personel.id">
                                <td>@personel.adi</td>
                                <td>@personel.soyadi</td>
                                <td>@personel.kartno</td>
                                <td>@personel.sicilno</td>
                                <td>@personel.departman</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
</div>

<div class="form-group">
    <label for="selectedMonth">Ay Seçin</label>
    <input type="month" id="selectedMonth" name="SelectedMonth" class="form-control mr-2"
           min="2010-01" max="2025-12" />
</div>



<!-- Hidden input to store the selected personel ID -->
<input type="hidden" id="selectedPersonelId" name="SelectedPersonelId" value="@Model.SelectedPersonelId" />

<!-- Button to Export Report to PDF -->
<button id="exportToPdfBtn" class="btn btn-primary">Raporu PDF Olarak Dışa Aktar</button>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />

<script>
    // Tablodaki arama alanlarını yönet
    document.querySelectorAll('.arama').forEach((input, index) => {
        input.addEventListener('input', function () {
            filterTable(index, this.value);
        });
    });
    // Personel satırına tıklama olayını yönet
    $('#personelListesi').on('click', '.personel-row', function () {
        // Önceki seçimi kaldır
        $('.personel-row.table-active').removeClass('table-active');

        // Yeni seçimi ekle
        $(this).addClass('table-active');

        // Seçilen personel ID'sini gizli inputa yaz
        var selectedPersonelId = $(this).data('personel-id');
        $('#selectedPersonelId').val(selectedPersonelId);
    });
    function filterTable(columnIndex, query) {
        const rows = document.querySelectorAll('#personelListesi tbody tr');
        rows.forEach(row => {
            const cell = row.cells[columnIndex];
            if (cell) {
                const cellText = cell.textContent.toLowerCase();
                // Satırı göster/gizle
                row.style.display = cellText.includes(query.toLowerCase()) ? '' : 'none';
            }
        });
    }
    // Ay Seçici (Calendar) jQuery UI Datepicker
    $('#selectMonth').datepicker({
        changeMonth: true,
        changeYear: true,
        showButtonPanel: true,
        dateFormat: 'mm-yy', // Ay ve yıl formatı
        onClose: function(dateText, inst) {
            var selectedDate = $(this).val();
            console.log('Seçilen Ay ve Yıl: ' + selectedDate);  // Seçilen ay ve yılı konsola yazdır
        }
    });

    // PDF dışa aktar butonuna tıklama
// Ay Seçici (Calendar) jQuery UI Datepicker'ı Kaldırıyoruz çünkü type="month" zaten ihtiyacımızı karşılıyor
$('#exportToPdfBtn').on('click', function() {
    var selectedPersonelId = document.getElementById('selectedPersonelId').value;
    var selectedMonth = $('#selectedMonth').val();  // Ay ve Yıl

    if (selectedPersonelId && selectedMonth) {
        // Eğer bir personel ve ay seçildiyse, raporu dışa aktarma işlemine başla
        var startDate = selectedMonth + '-01';  // Ayın 1. gününü al
        var endDate = selectedMonth + '-31';   // Ayın son günü (basit bir tahmin)
        window.location.href = '@Url.Action("ExportToPdf2", "Hareket")?StartDate=' + startDate + '&EndDate=' + endDate + '&SelectedPersonelId=' + selectedPersonelId;
    } else {
        alert('Lütfen bir personel ve ay seçin.');
    }
});
</script>

<style>
    .btn-group-toggle .btn {
        margin-right: 10px; /* Butonlar arasında boşluk bırak */
    }

        .btn-group-toggle .btn input[type="radio"] {
            display: none; /* Varsayılan radio buton görünümünü gizle */
        }

        .btn-group-toggle .btn.active {
            background-color: #007bff; /* Seçili butonun arka plan rengi */
            color: white; /* Seçili butonun yazı rengi */
        }

        .btn-group-toggle .btn:not(.active):hover {
            background-color: #e2e6ea; /* Hover rengi */
        }


    .alert {
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
    }

    .alert-success {
        background-color: green;
        color: #155724;
        border: 1px solid #c3e6cb;
    }
    /* Modal Stilleri */
    .modal-content {
        border-radius: 10px; /* Köşe yuvarlama */
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2); /* Gölge efekti */
    }

    /* Ekstra stil ve yerleşim ayarları */
    .modal-header, .modal-footer {
        background-color: #f1f1f1; /* Arka plan rengi */
    }

    .modal-header {
        border-bottom: 1px solid #007bff;
    }

    .modal-footer {
        border-top: 1px solid #007bff;
    }


    /* Form Satırları */
    .form-row {
        display: flex; /* Flexbox kullanarak yan yana hizala */
        justify-content: space-between; /* Boşluğu eşit dağıt */
        margin-bottom: 15px; /* Form elemanları arasındaki boşluk */
    }

    .form-group {
        flex: 1; /* Elemanların eşit genişlikte olmasını sağlar */
        margin-right: 10px; /* Sağdaki boşluk */
    }

        .form-group:last-child {
            margin-right: 0; /* Son eleman için sağdaki boşluğu kaldır */
        }

    .form-control {
        border-radius: 5px; /* Giriş alanlarının köşe yuvarlama */
        padding: 10px; /* İç boşluk */
        border: 1px solid #ced4da; /* Kenar rengi */
        width: 100%; /* Genişlik %100 */
    }

    .btn-primary {
        background-color: #007bff; /* Düğme arka plan rengi */
        border-color: #007bff; /* Düğme kenar rengi */
        transition: background-color 0.3s, border-color 0.3s; /* Hover geçişi */
        padding: 10px 20px; /* Düğme içi boşluk */
        border-radius: 8px; /* Düğme köşe yuvarlama */
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Hoverda arka plan rengi */
            border-color: #004085; /* Hoverda kenar rengi */
        }

    /* Modern Tablo Stili */
    .table {
        font-size: 15px;
        background-color: #f8f9fa;
        border-radius: 10px;
        overflow: hidden;
    }

    .table-hover tbody tr:hover {
        background-color: #e9ecef; /* Hoverda tablo satırı rengi */
    }

    /* Seçili satır stili */
    .table-active {
        background-color: #007bff !important;
        color: white !important;
    }

    .personel-row {
        cursor: pointer;
        transition: background-color 0.3s ease; /* Satır hover geçişi */
    }

        .personel-row:hover {
            background-color: #d6e5f3 !important; /* Hover rengi */
            color: black;
        }

    .shadow-sm {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075); /* Gölge efekti */
    }

    .thead-light th {
        background-color: #f1f1f1; /* Başlık arka plan rengi */
        font-weight: bold; /* Kalın yazı */
    }

    .sortable {
        cursor: pointer; /* Sıralanabilir sütun için işaretçi */
    }
</style>
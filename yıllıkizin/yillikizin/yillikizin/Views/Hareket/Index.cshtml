@model yillikizin.Models.HareketViewModel

@{
    ViewBag.Title = "Personel Hareketleri";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid" style="max-width: 1000px; margin: 0 auto;">
    <div class="row">
        <div class="col-md-12">
            <h3>Personel Listesi</h3>

            <!-- Personel Tablosu -->
            <table class="table-hover table-striped table-bordered table shadow-sm" id="personelListesi">
                <thead class="thead-light">
                    <tr>
                        <th scope="col" class="sortable" data-sort="string">Adı</th>
                        <th scope="col" class="sortable" data-sort="string">Soyadı</th>
                        <th scope="col" class="sortable" data-sort="string">Kart Numarası</th>
                        <th scope="col" class="sortable" data-sort="string">Sicil Numarası</th>
                        <th scope="col" class="sortable" data-sort="string">Departman</th>
                    </tr>
                    <tr>
                        <th><input type="text" class="form-control arama" placeholder="Adı ara..." /></th>
                        <th><input type="text" class="form-control arama" placeholder="Soyadı ara..." /></th>
                        <th><input type="text" class="form-control arama" placeholder="Kart Numarası ara..." /></th>
                        <th><input type="text" class="form-control arama" placeholder="Sicil Numarası ara..." /></th>
                        <th><input type="text" class="form-control arama" placeholder="Departman ara..." /></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var personel in Model.PersonelListesi)
                    {
                        <tr class="personel-row @(Model.SelectedPersonelId == personel.id ? "table-active" : "")"
                            data-personel-id="@personel.id">
                            <td>@personel.adi</td>
                            <td>@personel.soyadi</td>
                            <td>@personel.kartno</td>
                            <td>@personel.sicilno</td>
                            <td>@personel.departman</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="col-md-12 mt-4">
            <h3>Hareketler</h3>

            <!-- Tarih Filtreleme Formu -->
            <div class="form-inline mb-3">
                <label for="baslangicTarihi" class="mr-2">Başlangıç Tarihi:</label>
                <input type="date" id="baslangicTarihi" class="form-control mr-2" />

                <label for="bitisTarihi" class="mr-2">Bitiş Tarihi:</label>
                <input type="date" id="bitisTarihi" class="form-control mr-2" />

                <button id="filtrele" class="btn btn-primary mr-2">Filtrele</button>
                <button id="yeniHareket" class="btn btn-secondary" data-toggle="modal" data-target="#yeniHareketModal">Yeni Hareket</button>
            </div>

            <!-- Hareket Tablosu -->
            <div id="hareketListesi" class="mt-3">
                @Html.Partial("_HareketListesi", Model.HareketListesi)
            </div>
        </div>
    </div>
</div>

<!-- Yeni Hareket Modal -->
<div class="modal fade" id="yeniHareketModal" tabindex="-1" role="dialog" aria-labelledby="yeniHareketModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="yeniHareketModalLabel">Yeni Hareket Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Kapat">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="popupMessage" class="alert" style="display:none;"></div>
                <form id="yeniHareketForm">
                    <div class="form-row mb-3">
                        <div class="col-md-4">
                            <label for="kartNo">Kart Numarası:</label>
                            <input type="text" class="form-control" id="kartNo" name="kartNo" required />
                        </div>
                        <div class="col-md-4">
                            <label for="tarih">Tarih:</label>
                            <input type="date" class="form-control" id="tarih" name="tarih" required />
                        </div>
                        <div class="col-md-4">
                            <label for="saat">Saat:</label>
                            <input type="time" class="form-control" id="saat" name="saat" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Yön Bilgisi</label>
                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-outline-primary active">
                                <input type="radio" name="yon" value="001" checked> Giriş
                            </label>
                            <label class="btn btn-outline-primary">
                                <input type="radio" name="yon" value="002"> Çıkış
                            </label>
                        </div>
                    </div>
                    <input type="hidden" id="terminalNo" name="terminalNo" value="01" />
                </form>



            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="btnHareketKaydet">Kaydet</button>
            </div>
        </div>
    </div>
</div>




<style>
    .btn-group-toggle .btn {
        margin-right: 10px; /* Butonlar arasında boşluk bırak */
    }

        .btn-group-toggle .btn input[type="radio"] {
            display: none; /* Varsayılan radio buton görünümünü gizle */
        }

        .btn-group-toggle .btn.active {
            background-color: #007bff; /* Seçili butonun arka plan rengi */
            color: white; /* Seçili butonun yazı rengi */
        }

        .btn-group-toggle .btn:not(.active):hover {
            background-color: #e2e6ea; /* Hover rengi */
        }


    .alert {
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
    /* Modal Stilleri */
    .modal-content {
        border-radius: 10px; /* Köşe yuvarlama */
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2); /* Gölge efekti */
    }

    /* Ekstra stil ve yerleşim ayarları */
    .modal-header, .modal-footer {
        background-color: #f1f1f1; /* Arka plan rengi */
    }

    .modal-header {
        border-bottom: 1px solid #007bff;
    }

    .modal-footer {
        border-top: 1px solid #007bff;
    }


    /* Form Satırları */
    .form-row {
        display: flex; /* Flexbox kullanarak yan yana hizala */
        justify-content: space-between; /* Boşluğu eşit dağıt */
        margin-bottom: 15px; /* Form elemanları arasındaki boşluk */
    }

    .form-group {
        flex: 1; /* Elemanların eşit genişlikte olmasını sağlar */
        margin-right: 10px; /* Sağdaki boşluk */
    }

        .form-group:last-child {
            margin-right: 0; /* Son eleman için sağdaki boşluğu kaldır */
        }

    .form-control {
        border-radius: 5px; /* Giriş alanlarının köşe yuvarlama */
        padding: 10px; /* İç boşluk */
        border: 1px solid #ced4da; /* Kenar rengi */
        width: 100%; /* Genişlik %100 */
    }

    .btn-primary {
        background-color: #007bff; /* Düğme arka plan rengi */
        border-color: #007bff; /* Düğme kenar rengi */
        transition: background-color 0.3s, border-color 0.3s; /* Hover geçişi */
        padding: 10px 20px; /* Düğme içi boşluk */
        border-radius: 8px; /* Düğme köşe yuvarlama */
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Hoverda arka plan rengi */
            border-color: #004085; /* Hoverda kenar rengi */
        }

    /* Modern Tablo Stili */
    .table {
        font-size: 15px;
        background-color: #f8f9fa;
        border-radius: 10px;
        overflow: hidden;
    }

    .table-hover tbody tr:hover {
        background-color: #e9ecef; /* Hoverda tablo satırı rengi */
    }

    /* Seçili satır stili */
    .table-active {
        background-color: #007bff !important;
        color: white !important;
    }

    .personel-row {
        cursor: pointer;
        transition: background-color 0.3s ease; /* Satır hover geçişi */
    }

        .personel-row:hover {
            background-color: #d6e5f3 !important; /* Hover rengi */
            color: black;
        }

    .shadow-sm {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075); /* Gölge efekti */
    }

    .thead-light th {
        background-color: #f1f1f1; /* Başlık arka plan rengi */
        font-weight: bold; /* Kalın yazı */
    }

    .sortable {
        cursor: pointer; /* Sıralanabilir sütun için işaretçi */
    }
</style>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Personel hareketlerini listeleme
        $('#personelListesi').on('click', '.personel-row', function () {
            var personelId = $(this).data('personel-id');
            getHareketler(personelId);
            $('#personelListesi .personel-row').removeClass('table-active');
            $(this).addClass('table-active');
        });

        // Her sütun için arama fonksiyonu
        $('.arama').on('keyup', function () {
            var index = $(this).parent().index();
            var aramaTermi = $(this).val().toLowerCase();
            $('#personelListesi tbody tr').filter(function () {
                $(this).toggle($(this).find('td').eq(index).text().toLowerCase().indexOf(aramaTermi) > -1);
            });
        });

        // Sıralama fonksiyonu
        $('.sortable').on('click', function () {
            var table = $('#personelListesi');
            var tbody = table.find('tbody');
            var rows = tbody.find('tr').toArray();
            var index = $(this).index();
            var dataType = $(this).data('sort');

            // Sıralama işlemi
            rows.sort(function (a, b) {
                var A = $(a).find('td').eq(index).text();
                var B = $(b).find('td').eq(index).text();
                if (dataType === 'number') {
                    return parseFloat(A) - parseFloat(B);
                } else {
                    return A.localeCompare(B);
                }
            });

            // Yeni sıralanmış satırları tabloya ekleme
            tbody.empty().append(rows);
        });

        // Tarih filtreleme butonu
// Tarih filtreleme butonu
        $('#filtrele').click(function () {
            var personelId = $('.table-active').data('personel-id'); // Aktif personel ID'sini al
            var baslangicTarihi = $('#baslangicTarihi').val();
            var bitisTarihi = $('#bitisTarihi').val();

            // Tarihlerin doğru formatta olup olmadığını kontrol et
            if (!baslangicTarihi || !bitisTarihi) {
                showMessage('Lütfen tarihleri doldurun.', 'danger');
                return;
            }

            $.ajax({
                url: '@Url.Action("FilterHareketler", "Hareket")',
                type: 'GET',
                data: { personelId: personelId, baslangicTarihi: baslangicTarihi, bitisTarihi: bitisTarihi },
                success: function (data) {
                    $('#hareketListesi').html(data);
                },
                error: function () {
                    showMessage('Hareketleri filtrelerken bir hata oluştu.', 'danger');
                }
            });
        });
        // Yeni hareket kaydetme
        $('#btnHareketKaydet').click(function () {
    // Popup mesaj alanını temizle
    $('#popupMessage').hide().removeClass('alert-success alert-danger').text('');

    // Formdan değerleri al
    var kartNo = $('#yeniHareketModal').find('#kartNo').val().trim();
    var tarih = $('#yeniHareketModal').find('#tarih').val();
    var saat = $('#yeniHareketModal').find('#saat').val();
    var yon = $('#yeniHareketModal').find('input[name="yon"]:checked').val();
    var terminalNo = $('#yeniHareketModal').find('#terminalNo').val(); // Terminal numarasını al

    // Console log ile alınan değerleri göster
    console.log("Kart No:", kartNo);
    console.log("Tarih:", tarih);
    console.log("Saat:", saat);
    console.log("Yön:", yon);
    console.log("Terminal No:", terminalNo); // Terminal No'yu kontrol et

    // Boş alan kontrolü
    if (!kartNo || !tarih || !saat) {
        $('#popupMessage').addClass('alert-danger').text('Lütfen tüm alanları doldurun.').show();
        return;
    }

    // Verileri AJAX ile gönder
    $.ajax({
        type: 'POST',
        url: '@Url.Action("YeniHareketEkle", "Hareket")',
        data: { kartNo: kartNo, terminalNo: terminalNo, tarih: tarih, saat: saat, yon: yon }, // terminalNo eklendi
        success: function (response) {
            console.log("Sunucu Yanıtı:", response);
            if (response.success) {
                $('#yeniHareketModal').modal('hide'); // Modal'ı kapat
                $('#yeniHareketForm')[0].reset(); // Formu sıfırla
                getHareketler(); // Yeni hareketleri listele
            } else {
                alert(response.message); // Sunucudan gelen hata mesajını göster
            }
        },
        error: function (xhr) {
            console.log("AJAX Hatası:", xhr.responseText);
            alert('Hata: ' + xhr.responseText);
        }
    });

});


    });

    // Personel hareketlerini getir
    function getHareketler(personelId) {
        $.ajax({
            url: '@Url.Action("GetHareketler", "Hareket")',
            type: 'GET',
            data: { personelId: personelId },
            success: function (data) {
                $('#hareketListesi').html(data);
            },
            error: function () {
                alert('Hareketleri yüklerken bir hata oluştu.');
            }
        });
    }
</script>

